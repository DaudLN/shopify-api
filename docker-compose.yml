version: "3.9"
services:
  postgres:
    image: postgres:14.8-alpine3.18
    container_name: postgres

    restart: always
    volumes:
      - ./data/db:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=postgres
    ports:
      - 5432:5432
      
  redis:
    image: redis:7.0-alpine3.18
    container_name: redis
    ports:
      - 6379:6379
    restart: always
    volumes:
      - redisdata:/data

  smtp4dev:
    image: rnwood/smtp4dev:v3
    container_name: smtp
    ports:
      - 5000:80
      - 25:25
    restart: always

  web:
    container_name: django
    build:
      context: .
      dockerfile: Dockerfile
    command: ./wait-for-it.sh mysql:3306 -- ./docker-entrypoint.sh
    ports:
      - 8000:8000
    depends_on:
      - redis
      - mysql
    restart: on-failure
    volumes:
      - .:/app

  celery:
    container_name: celery
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - redis
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
    volumes:
      - .:/app

  celery-beat:
    container_name: celery-beat
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A storefront beat --loglevel=info
    depends_on:
      - redis
    volumes:
      - .:/app

  flower:
    container_name: flower
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A storefront flower
    depends_on:
      - web
      - redis
      - celery
    environment:
      DEBUG: 1
      CELERY_BROKER: redis://redis:6379/0
      CELERY_BACKEND: redis://redis:6379/0
    ports:
      - 5555:5555

  # tests:
  #   container_name: tests
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   command: ./wait-for-it.sh mysql:3306 -- ptw
  #   depends_on:
  #     - redis
  #     - mysql
  #   tty: true
  #   volumes:
  #     - .:/app

volumes:
  mysqldata:
  redisdata:

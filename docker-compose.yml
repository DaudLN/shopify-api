version: "3.9"
services:
  postgres:
    image: postgres:16.2-alpine3.19
    container_name: shopify-db

    restart: always
    volumes:
      - ./data/db:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=postgres
    ports:
      - 5433:5432
      
  redis:
    image: redis:7.0-alpine3.18
    container_name: shopify-redis
    ports:
      - "6380:6379"
    restart: always
    volumes:
      - redisdata:/data

  smtp4dev:
    image: rnwood/smtp4dev:v3
    container_name: shopify-smtp
    ports:
      - "5001:5000"
      - "2526:2525"
    restart: always

  web:
    container_name: shopify-backend
    build:
      context: .
      dockerfile: Dockerfile
    command: ./wait-for-it.sh postgres:5432 -- ./docker-entrypoint.sh
    ports:
      - "8000:80"
    depends_on:
      - redis
      - postgres
    restart: on-failure
    env_file:
      - docker.env
    volumes:
      - .:/app

  celery:
    container_name: shopify-celery
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A storefront worker --loglevel=info
    depends_on:
      - redis
    env_file:
      - docker.env
    volumes:
      - .:/app

  celery-beat:
    container_name: shopify-celery-beat
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A storefront beat --loglevel=info
    depends_on:
      - redis
    environment:
      REDIS_SERVER: redis://redis:6379
    volumes:
      - .:/app

  flower:
    container_name: shopify-flower
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A storefront flower
    depends_on:
      - web
      - redis
      - celery
    ports:
      - "5555:5555"
    env_file:
      - docker.env

  tests:
    container_name: shopify-tests
    build:
      context: .
      dockerfile: Dockerfile
    command: ./wait-for-it.sh postgres:5432 -- locust -f locust/locustfile.py
    depends_on:
      - redis
      - postgres
    ports:
      - "8080:80"
    tty: true
    env_file:
      - docker.env
    volumes:
      - .:/app

volumes:
  mysqldata:
  redisdata:
